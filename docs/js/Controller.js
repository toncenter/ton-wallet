!function(e){var t={};function s(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,a){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(a,i,function(t){return e[t]}.bind(null,i));return a},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);var a=s(1),i=s.n(a);let n=null,o=null;const r=[],d=()=>{chrome.windows.create({url:"popup.html",type:"popup",width:400,height:600,top:0,left:self.innerWidth-400},e=>{(void 0)._popupId=e.id})},c=TonWeb.utils.BN,l=TonWeb.utils.nacl,h=TonWeb.utils.Address,w=TonWeb.utils.fromNano;const p=self.location.href.indexOf("testnet")>-1;class m{constructor(){this.myAddress=null,this.publicKeyHex=null,this.myMnemonicWords=null,this.balance=null,this.walletContract=null,this.transactions=[],this.updateIntervalId=0,this.lastTransactionTime=0,this.isContractInitialized=!1,this.sendingData=null,this.processingVisible=!1,this.ledgerApp=null,this.isLedger=!1,self.view&&(self.view.controller=this),this.sendToView("setIsTestnet",p),this._init()}static async wordsToPrivateKey(e){const t=await TonWeb.mnemonic.mnemonicToKeyPair(e);return TonWeb.utils.bytesToBase64(t.secretKey.slice(0,32))}static async saveWords(e,t){await i.a.setItem("words",await async function(e,t){const s=(new TextEncoder).encode(t),a=await crypto.subtle.digest("SHA-256",s),i=crypto.getRandomValues(new Uint8Array(12)),n={name:"AES-GCM",iv:i},o=await crypto.subtle.importKey("raw",a,n,!1,["encrypt"]),r=(new TextEncoder).encode(e),d=await crypto.subtle.encrypt(n,o,r),c=Array.from(new Uint8Array(d)).map(e=>String.fromCharCode(e)).join(""),l=btoa(c);return Array.from(i).map(e=>("00"+e.toString(16)).slice(-2)).join("")+l}(e.join(","),t))}static async loadWords(e){return(await async function(e,t){const s=(new TextEncoder).encode(t),a=await crypto.subtle.digest("SHA-256",s),i=e.slice(0,24).match(/.{2}/g).map(e=>parseInt(e,16)),n={name:"AES-GCM",iv:new Uint8Array(i)},o=await crypto.subtle.importKey("raw",a,n,!1,["decrypt"]),r=atob(e.slice(24)),d=new Uint8Array(r.match(/[\s\S]/g).map(e=>e.charCodeAt(0))),c=await crypto.subtle.decrypt(n,o,d);return(new TextDecoder).decode(c)}(await i.a.getItem("words"),e)).split(",")}async getWallet(){return this.ton.provider.getWalletInfo(this.myAddress)}async _init(){await i.a.removeItem("pwdHash"),this.ton=new TonWeb(new TonWeb.HttpProvider(p?"https://testnet.toncenter.com/api/v2/jsonRPC":"https://toncenter.com/api/v2/jsonRPC")),this.myAddress=await i.a.getItem("address"),this.myAddress&&await i.a.getItem("words")?("true"===await i.a.getItem("isLedger")&&(this.isLedger=!0,this.publicKeyHex=await i.a.getItem("publicKey"),this.sendToView("setIsLedger",this.isLedger)),await this.showMain()):(await i.a.clear(),this.sendToView("showScreen",{name:"start"}))}checkContractInitialized(e){return"active"===e.account_state}getBalance(e){return new c(e.balance)}async getTransactions(e=20){function t(e){if(!e.msg_data)return"";if("msg.dataText"!==e.msg_data["@type"])return"";const t=e.msg_data.text;return(new TextDecoder).decode(TonWeb.utils.base64ToBytes(t))}const s=[],a=await this.ton.getTransactions(this.myAddress,e);for(let e of a){let a=new c(e.in_msg.value);for(let t of e.out_msgs)a=a.sub(new c(t.value));let i="",n="",o="";e.in_msg.source?(i=e.in_msg.source,n=e.in_msg.destination,o=t(e.in_msg)):e.out_msgs.length&&(i=e.out_msgs[0].source,n=e.out_msgs[0].destination,o=t(e.out_msgs[0])),n&&s.push({amount:a.toString(),from_addr:i,to_addr:n,fee:e.fee.toString(),storageFee:e.storage_fee.toString(),otherFee:e.other_fee.toString(),comment:o,date:1e3*e.utime})}return s}async sign(e,t,s,a){let i=(await this.getWallet(this.myAddress)).seqno;i||(i=0);const n=a?a.secretKey:null;return this.walletContract.methods.transfer({secretKey:n,toAddress:e,amount:t,seqno:i,payload:s,sendMode:3})}async showCreated(){this.sendToView("showScreen",{name:"created"}),this.sendToView("disableCreated",!0),this.myMnemonicWords=await TonWeb.mnemonic.generateMnemonic();const e=await m.wordsToPrivateKey(this.myMnemonicWords),t=l.sign.keyPair.fromSeed(TonWeb.utils.base64ToBytes(e)),s=this.ton.wallet.all.v3R2;this.walletContract=new s(this.ton.provider,{publicKey:t.publicKey,wc:0}),this.myAddress=(await this.walletContract.getAddress()).toString(!0,!0,!0),await i.a.setItem("walletVersion","v3R2"),this.sendToView("disableCreated",!1)}async createPrivateKey(){this.showBackup(this.myMnemonicWords)}onBackupWalletClick(){this.afterEnterPassword=async e=>{this.showBackup(e)},this.sendToView("showPopup",{name:"enterPassword"})}showBackup(e){this.sendToView("showScreen",{name:"backup",words:e})}async onBackupDone(){await i.a.getItem("words")?this.sendToView("showScreen",{name:"main"}):this.showCreatePassword()}async createLedger(e){let t;switch(e){case"hid":t=await TonWeb.ledger.TransportWebHID.create();break;case"ble":t=await TonWeb.ledger.BluetoothTransport.create();break;default:throw new Error("unknown transportType"+e)}t.setDebugMode(!0),this.isLedger=!0,this.ledgerApp=new TonWeb.ledger.AppTon(t,this.ton);const s=(await this.ledgerApp.getAppConfiguration()).version;if(console.log("ledgerAppConfig=",s),!s.startsWith("2"))throw alert("Please update your Ledger TON-app to v2.0.1 or upper or use old wallet version https://tonwallet.me/prev/"),new Error("outdated ledger ton-app version");const{publicKey:a}=await this.ledgerApp.getPublicKey(0,!1),i=new(0,this.ton.wallet.all.v3R1)(this.ton.provider,{publicKey:a,wc:0});this.walletContract=i;const n=await i.getAddress();this.myAddress=n.toString(!0,!0,!0),this.publicKeyHex=TonWeb.utils.bytesToHex(a)}async importLedger(e){await this.createLedger(e),await i.a.setItem("walletVersion",this.walletContract.getName()),await i.a.setItem("address",this.myAddress),await i.a.setItem("isLedger","true"),await i.a.setItem("ledgerTransportType",e),await i.a.setItem("words","ledger"),await i.a.setItem("publicKey",this.publicKeyHex),this.sendToView("setIsLedger",this.isLedger),this.sendToView("showScreen",{name:"readyToGo"})}showImport(){this.sendToView("showScreen",{name:"import"})}async import(e){if(this.myMnemonicWords=e,this.myMnemonicWords){const e=await m.wordsToPrivateKey(this.myMnemonicWords),t=l.sign.keyPair.fromSeed(TonWeb.utils.base64ToBytes(e));let s=[];for(let e of this.ton.wallet.list){const a=new e(this.ton.provider,{publicKey:t.publicKey,wc:0}),i=(await a.getAddress()).toString(!0,!0,!0),n=await this.ton.provider.getWalletInfo(i),o=this.getBalance(n);o.gt(new c(0))&&s.push({balance:o,clazz:e}),console.log(a.getName(),i,n,o.toString())}let a=this.ton.wallet.all.v3R2;s.length>0&&(s.sort((e,t)=>e.balance.cmp(t.balance)),a=s[s.length-1].clazz),await this.importImpl(t,a)}}async importImpl(e,t){this.walletContract=new t(this.ton.provider,{publicKey:e.publicKey,wc:0}),this.myAddress=(await this.walletContract.getAddress()).toString(!0,!0,!0),await i.a.setItem("walletVersion",this.walletContract.getName()),this.showCreatePassword()}showCreatePassword(){this.sendToView("showScreen",{name:"createPassword"})}async savePrivateKey(e){this.isLedger=!1,await i.a.setItem("isLedger","false"),await i.a.setItem("address",this.myAddress),await m.saveWords(this.myMnemonicWords,e),this.myMnemonicWords=null,this.sendToView("setIsLedger",this.isLedger),this.sendToView("showScreen",{name:"readyToGo"})}async onChangePassword(e,t){let s;try{s=await m.loadWords(e)}catch(e){return void this.sendToView("showChangePasswordError")}await m.saveWords(s,t),this.sendToView("closePopup")}async onEnterPassword(e){let t;try{t=await m.loadWords(e)}catch(e){return void this.sendToView("showEnterPasswordError")}this.afterEnterPassword(t)}async showMain(){if(this.sendToView("showScreen",{name:"main",myAddress:this.myAddress}),!this.walletContract){const e=await i.a.getItem("walletVersion"),t=e?this.ton.wallet.all[e]:this.ton.wallet.default;this.walletContract=new t(this.ton.provider,{address:this.myAddress,wc:0})}this.updateIntervalId=setInterval(()=>this.update(),5e3),this.update(!0),this.sendToDapp("ton_accounts",[this.myAddress])}async initDapp(){this.sendToDapp("ton_accounts",this.myAddress?[this.myAddress]:[]),this.doMagic("true"===await i.a.getItem("magic")),this.doProxy("true"===await i.a.getItem("proxy"))}async initView(){this.myAddress&&await i.a.getItem("words")?(this.sendToView("showScreen",{name:"main",myAddress:this.myAddress}),null!==this.balance&&this.sendToView("setBalance",{balance:this.balance.toString(),txs:this.transactions})):this.sendToView("showScreen",{name:"start"}),this.sendToView("setIsMagic","true"===await i.a.getItem("magic")),this.sendToView("setIsProxy","true"===await i.a.getItem("proxy"))}update(e){(this.processingVisible&&this.sendingData||null===this.balance||e)&&this.getWallet().then(e=>{const t=this.getBalance(e),s=null===this.balance||0!==this.balance.cmp(t);this.balance=t;const a=this.checkContractInitialized(e)&&e.seqno;console.log("isBalanceChanged",s),console.log("isContractInitialized",a),!this.isContractInitialized&&a&&(this.isContractInitialized=!0),s?this.getTransactions().then(e=>{if(e.length>0){this.transactions=e;const t=e.filter(e=>Number(e.date)>this.lastTransactionTime);if(this.lastTransactionTime=Number(e[0].date),this.processingVisible&&this.sendingData)for(let e of t){const t=new h(e.to_addr).toString(!0,!0,!0),s=new h(this.sendingData.toAddress).toString(!0,!0,!0),a=e.amount,i="-"+this.sendingData.amount.toString();if(t===s&&a===i){this.sendToView("showPopup",{name:"done",message:w(this.sendingData.amount)+" TON have been sent"}),this.processingVisible=!1,this.sendingData=null;break}}}this.sendToView("setBalance",{balance:t.toString(),txs:e})}):this.sendToView("setBalance",{balance:t.toString(),txs:this.transactions})})}async showAddressOnDevice(){this.ledgerApp||await this.createLedger(await i.a.getItem("ledgerTransportType")||"hid");const{address:e}=await this.ledgerApp.getAddress(0,!0,this.ledgerApp.ADDRESS_FORMAT_USER_FRIENDLY+this.ledgerApp.ADDRESS_FORMAT_URL_SAFE+this.ledgerApp.ADDRESS_FORMAT_BOUNCEABLE);console.log(e.toString(!0,!0,!0))}async getFees(e,t,s){if(!this.isContractInitialized)return TonWeb.utils.toNano(.010966001);try{const a=await this.sign(t,e,s,null),i=(await a.estimateFee()).source_fees,n=new c(i.in_fwd_fee),o=new c(i.storage_fee),r=new c(i.gas_fee),d=new c(i.fwd_fee);return n.add(o).add(r).add(d)}catch(e){return console.error(e),new c(0)}}async showSendConfirm(e,t,s,a){if(e.lte(0)||this.balance.lt(e))return;if(!h.isValid(t))return;const i=await this.getFees(e,t,s);this.isLedger?(this.sendToView("showPopup",{name:"sendConfirm",amount:e.toString(),toAddress:t,fee:i.toString()},a),this.send(t,e,s,null)):(this.afterEnterPassword=async a=>{this.processingVisible=!0,this.sendToView("showPopup",{name:"processing"});const i=await m.wordsToPrivateKey(a);this.send(t,e,s,i)},this.sendToView("showPopup",{name:"sendConfirm",amount:e.toString(),toAddress:t,fee:i.toString()},a))}showSignConfirm(e,t){return new Promise((s,a)=>{this.isLedger?(alert("sign not supported by Ledger"),a()):(this.afterEnterPassword=async t=>{this.sendToView("closePopup");const a=await m.wordsToPrivateKey(t),i=this.rawSign(e,a);s(i)},this.sendToView("showPopup",{name:"signConfirm",data:e},t))})}async send(e,t,s,a){try{let n=0;if(this.isLedger){this.ledgerApp||await this.createLedger(await i.a.getItem("ledgerTransportType")||"hid");const t=new h(e);t.isUserFriendly&&(n+=this.ledgerApp.ADDRESS_FORMAT_USER_FRIENDLY,t.isUrlSafe&&(n+=this.ledgerApp.ADDRESS_FORMAT_URL_SAFE),t.isBounceable&&(n+=this.ledgerApp.ADDRESS_FORMAT_BOUNCEABLE),t.isTestOnly&&(n+=this.ledgerApp.ADDRESS_FORMAT_TEST_ONLY))}if(this.checkContractInitialized(await this.ton.provider.getWalletInfo(e))||(e=new h(e).toString(!0,!0,!1)),this.isLedger){let a=(await this.getWallet(this.myAddress)).seqno;a||(a=0);const i=await this.ledgerApp.transfer(0,this.walletContract,e,t,a,n);this.sendingData={toAddress:e,amount:t,comment:s,query:i},this.sendToView("showPopup",{name:"processing"}),this.processingVisible=!0,await this.sendQuery(i)}else{const i=l.sign.keyPair.fromSeed(TonWeb.utils.base64ToBytes(a)),n=await this.sign(e,t,s,i);this.sendingData={toAddress:e,amount:t,comment:s,query:n},await this.sendQuery(n)}}catch(e){console.error(e),this.sendToView("closePopup"),alert("Error sending")}}rawSign(e,t){const s=l.sign.keyPair.fromSeed(TonWeb.utils.base64ToBytes(t)),a=l.sign.detached(TonWeb.utils.hexToBytes(e),s.secretKey);return TonWeb.utils.bytesToHex(a)}async sendQuery(e){console.log("Send"),"ok"===(await e.send())["@type"]||(this.sendToView("closePopup"),alert("Send error"))}async onDisconnectClick(){this.myAddress=null,this.publicKeyHex=null,this.balance=null,this.walletContract=null,this.transactions=[],this.lastTransactionTime=0,this.isContractInitialized=!1,this.sendingData=null,this.processingVisible=!1,this.isLedger=!1,this.ledgerApp=null,clearInterval(this.updateIntervalId),await i.a.clear(),this.sendToView("showScreen",{name:"start"}),this.sendToDapp("ton_accounts",[])}doMagic(e){try{this.sendToDapp("ton_doMagic",e)}catch(e){}}doProxy(e){}sendToView(e,t,s){if(self.view)self.view.onMessage(e,t);else{const a={method:e,params:t};o?o.postMessage(a):s&&r.push(a)}}async onViewMessage(e,t){switch(e){case"showScreen":switch(t.name){case"created":this.showCreated();break;case"import":this.showImport();break;case"importLedger":this.importLedger(t.transportType)}break;case"import":this.import(t.words);break;case"createPrivateKey":this.createPrivateKey();break;case"passwordCreated":this.savePrivateKey(t.password);break;case"update":this.update(!0);break;case"showAddressOnDevice":this.showAddressOnDevice();break;case"onEnterPassword":this.onEnterPassword(t.password);break;case"onChangePassword":this.onChangePassword(t.oldPassword,t.newPassword);break;case"onSend":this.showSendConfirm(new c(t.amount),t.toAddress,t.comment);break;case"onBackupDone":this.onBackupDone();break;case"showMain":this.showMain();break;case"onBackupWalletClick":this.onBackupWalletClick();break;case"disconnect":this.onDisconnectClick();break;case"onClosePopup":this.processingVisible=!1;break;case"onMagicClick":await i.a.setItem("magic",t?"true":"false"),this.doMagic(t);break;case"onProxyClick":await i.a.setItem("proxy",t?"true":"false"),this.doProxy(t)}}sendToDapp(e,t){n&&n.postMessage(JSON.stringify({type:"gramWalletAPI",message:{jsonrpc:"2.0",method:e,params:t}}))}async onDappMessage(e,t){const s=!o;switch(e){case"ton_requestAccounts":return this.myAddress?[this.myAddress]:[];case"ton_getBalance":return this.balance?this.balance.toString():"";case"ton_sendTransaction":const e=t[0];return o||d(),"hex"===e.dataType?e.data=TonWeb.utils.hexToBytes(e.data):"base64"===e.dataType?e.data=TonWeb.utils.base64ToBytes(e.data):"boc"===e.dataType&&(e.data=TonWeb.boc.Cell.fromBoc(TonWeb.utils.base64ToBytes(e.data))[0]),this.showSendConfirm(new c(e.value),e.to,e.data,s),!0;case"ton_rawSign":const a=t[0];return o||d(),this.showSignConfirm(a.data,s);case"flushMemoryCache":return await chrome.webRequest.handlerBehaviorChanged(),!0}}}const g=new m;chrome.runtime&&chrome.runtime.onConnect&&chrome.runtime.onConnect.addListener(e=>{"gramWalletContentScript"===e.name?(n=e,n.onMessage.addListener(async e=>{if(!e.message)return;const t=await g.onDappMessage(e.message.method,e.message.params);n&&n.postMessage(JSON.stringify({type:"gramWalletAPI",message:{jsonrpc:"2.0",id:e.message.id,method:e.message.method,result:t}}))}),n.onDisconnect.addListener(()=>{n=null}),g.initDapp()):"gramWalletPopup"===e.name&&(o=e,o.onMessage.addListener((function(e){g.onViewMessage(e.method,e.params)})),o.onDisconnect.addListener(()=>{o=null}),g.initView(),r.forEach(e=>o.postMessage(e)),r.length=0)})},function(e,t){e.exports=self.localStorage||{setItem:(e,t)=>chrome.storage.local.set({[e]:t}),getItem:e=>chrome.storage.local.get(e).then(({[e]:t})=>t),removeItem:e=>chrome.storage.local.remove(e),clear:()=>chrome.storage.local.clear()}}]);